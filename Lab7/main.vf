////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : main.vf
// /___/   /\     Timestamp : 09/16/2024 19:41:45
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog /home/phuwit/Programming/KMITL-DigitalSystemsFundamentals/Lab7/main.vf -w /home/phuwit/Programming/KMITL-DigitalSystemsFundamentals/Lab7/main.sch
//Design Name: main
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CB2RE_HXILINX_main(CEO, Q0, Q1, TC, C, CE, R);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;
   
   input 	      C;	
   input 	      CE;	
   input 	      R;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C)
     begin
	if (R)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT); 
   
endmodule
`timescale  100 ps / 10 ps

module INV4_HXILINX_main (O0, O1, O2, O3, I0, I1, I2, I3);
    

   output O0;
   output O1;
   output O2;
   output O3;

   input  I0;
   input  I1;
   input  I2;
   input  I3;

assign O0 = !I0;
assign O1 = !I1;
assign O2 = !I2;
assign O3 = !I3;

endmodule
`timescale 100 ps / 10 ps

module FJKC_HXILINX_main(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale  100 ps / 10 ps

module D2_4E_HXILINX_main (D0, D1, D2, D3, A0, A1, E);
    

   output D0;
   output D1;
   output D2;
   output D3;

   input  A0;
   input  A1;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;

      always @ (A0 or A1 or E)
      begin
         if(!E)
           {D3, D2, D1, D0} <= 4'b0000;
        else
        begin
           case({A1,A0})
             2'b00 : {D3,D2,D1,D0} <= 4'b0001;
             2'b01 : {D3,D2,D1,D0} <= 4'b0010;
             2'b10 : {D3,D2,D1,D0} <= 4'b0100;
             2'b11 : {D3,D2,D1,D0} <= 4'b1000;
          endcase
        end
     end 

endmodule
`timescale 1ns / 1ps

module clkdiv2_MUSER_main(CLK, 
                          CLKO);

    input CLK;
   output CLKO;
   
   wire XLXN_27;
   wire CLKO_DUMMY;
   
   assign CLKO = CLKO_DUMMY;
   FD_1 #( .INIT(1'b0) ) XLXI_17 (.C(CLK), 
                 .D(XLXN_27), 
                 .Q(CLKO_DUMMY));
   INV  XLXI_18 (.I(CLKO_DUMMY), 
                .O(XLXN_27));
endmodule
`timescale 1ns / 1ps

module ClockDiv10_MUSER_main(CLK, 
                             CLKO);

    input CLK;
   output CLKO;
   
   wire XLXN_18;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_36;
   wire XLXN_38;
   wire XLXN_39;
   wire XLXN_123;
   wire CLKO_DUMMY;
   
   assign CLKO = CLKO_DUMMY;
   (* HU_SET = "XLXI_1_0" *) 
   FJKC_HXILINX_main  XLXI_1 (.C(CLK), 
                             .CLR(XLXN_18), 
                             .J(XLXN_35), 
                             .K(XLXN_36), 
                             .Q(XLXN_30));
   (* HU_SET = "XLXI_2_1" *) 
   FJKC_HXILINX_main  XLXI_2 (.C(CLK), 
                             .CLR(XLXN_18), 
                             .J(XLXN_30), 
                             .K(XLXN_34), 
                             .Q(XLXN_33));
   (* HU_SET = "XLXI_3_2" *) 
   FJKC_HXILINX_main  XLXI_3 (.C(CLK), 
                             .CLR(XLXN_18), 
                             .J(XLXN_29), 
                             .K(XLXN_28), 
                             .Q(XLXN_34));
   GND  XLXI_15 (.G(XLXN_18));
   VCC  XLXI_20 (.P(XLXN_28));
   INV  XLXI_21 (.I(XLXN_30), 
                .O(XLXN_29));
   AND2B1  XLXI_22 (.I0(XLXN_33), 
                   .I1(XLXN_34), 
                   .O(XLXN_35));
   VCC  XLXI_23 (.P(XLXN_36));
   FD_1 #( .INIT(1'b0) ) XLXI_24 (.C(CLK), 
                 .D(XLXN_33), 
                 .Q(XLXN_38));
   OR2  XLXI_25 (.I0(XLXN_38), 
                .I1(XLXN_33), 
                .O(XLXN_123));
   FD_1 #( .INIT(1'b0) ) XLXI_26 (.C(XLXN_123), 
                 .D(XLXN_39), 
                 .Q(CLKO_DUMMY));
   INV  XLXI_27 (.I(CLKO_DUMMY), 
                .O(XLXN_39));
endmodule
`timescale 1ns / 1ps

module Displayer_MUSER_main(Blinker_Clock, 
                            Hour_Ones, 
                            Hour_Tens, 
                            Min_Ones, 
                            Min_Tens, 
                            Scan_Clock, 
                            Common, 
                            DP, 
                            Segment);

    input Blinker_Clock;
    input [3:0] Hour_Ones;
    input [3:0] Hour_Tens;
    input [3:0] Min_Ones;
    input [3:0] Min_Tens;
    input Scan_Clock;
   output [3:0] Common;
   output DP;
   output [6:0] Segment;
   
   wire XLXN_9;
   wire XLXN_17;
   wire [3:0] XLXN_23;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_76;
   wire XLXN_77;
   wire XLXN_78;
   wire XLXN_79;
   
   SSEG_DEC  XLXI_1 (.BCD(XLXN_23[3:0]), 
                    .SSEG(Segment[6:0]));
   (* HU_SET = "XLXI_2_5" *) 
   CB2RE_HXILINX_main  XLXI_2 (.C(Scan_Clock), 
                              .CE(XLXN_17), 
                              .R(XLXN_9), 
                              .CEO(), 
                              .Q0(XLXN_70), 
                              .Q1(XLXN_71), 
                              .TC());
   GND  XLXI_5 (.G(XLXN_9));
   VCC  XLXI_15 (.P(XLXN_17));
   Mux4_Bus4_1E  XLXI_16 (.D0(Min_Ones[3:0]), 
                         .D1(Min_Tens[3:0]), 
                         .D2(Hour_Ones[3:0]), 
                         .D3(Hour_Tens[3:0]), 
                         .E(XLXN_72), 
                         .S0(XLXN_70), 
                         .S1(XLXN_71), 
                         .O(XLXN_23[3:0]));
   AND3B1  XLXI_43 (.I0(XLXN_70), 
                   .I1(XLXN_71), 
                   .I2(Blinker_Clock), 
                   .O(DP));
   (* HU_SET = "XLXI_45_3" *) 
   D2_4E_HXILINX_main  XLXI_45 (.A0(XLXN_70), 
                               .A1(XLXN_71), 
                               .E(XLXN_72), 
                               .D0(XLXN_79), 
                               .D1(XLXN_78), 
                               .D2(XLXN_77), 
                               .D3(XLXN_76));
   VCC  XLXI_46 (.P(XLXN_72));
   (* HU_SET = "XLXI_47_4" *) 
   INV4_HXILINX_main  XLXI_47 (.I0(XLXN_76), 
                              .I1(XLXN_77), 
                              .I2(XLXN_78), 
                              .I3(XLXN_79), 
                              .O0(Common[3]), 
                              .O1(Common[2]), 
                              .O2(Common[1]), 
                              .O3(Common[0]));
endmodule
`timescale 1ns / 1ps

module main(OSC, 
            PB3_START, 
            PB4_RESET, 
            SSD_COM, 
            SSD_DP, 
            SSD_Segment);

    input OSC;
    input PB3_START;
    input PB4_RESET;
   output [3:0] SSD_COM;
   output SSD_DP;
   output [6:0] SSD_Segment;
   
   wire XLXN_29;
   wire XLXN_31;
   wire XLXN_42;
   wire XLXN_95;
   wire [3:0] XLXN_98;
   wire [3:0] XLXN_99;
   wire [3:0] XLXN_100;
   wire [3:0] XLXN_101;
   wire XLXN_117;
   wire XLXN_10789;
   wire XLXN_10791;
   wire XLXN_10793;
   wire XLXN_10797;
   wire XLXN_10846;
   wire XLXN_10848;
   wire XLXN_10879;
   wire XLXN_10880;
   wire XLXN_10881;
   
   Counter00_99  XLXI_2 (.Clock(XLXN_10797), 
                        .Enable(XLXN_95), 
                        .Reset(XLXN_10789), 
                        .CEO(), 
                        .Ones(XLXN_100[3:0]), 
                        .TC(), 
                        .Tens(XLXN_101[3:0]));
   (* HU_SET = "XLXI_26_6" *) 
   FJKC_HXILINX_main  XLXI_26 (.C(PB3_START), 
                              .CLR(XLXN_31), 
                              .J(XLXN_29), 
                              .K(XLXN_29), 
                              .Q(XLXN_10880));
   VCC  XLXI_27 (.P(XLXN_29));
   GND  XLXI_28 (.G(XLXN_31));
   Displayer_MUSER_main  XLXI_43 (.Blinker_Clock(XLXN_10791), 
                                 .Hour_Ones(XLXN_100[3:0]), 
                                 .Hour_Tens(XLXN_101[3:0]), 
                                 .Min_Ones(XLXN_98[3:0]), 
                                 .Min_Tens(XLXN_99[3:0]), 
                                 .Scan_Clock(XLXN_10881), 
                                 .Common(SSD_COM[3:0]), 
                                 .DP(SSD_DP), 
                                 .Segment(SSD_Segment[6:0]));
   AND2B1  XLXI_44 (.I0(XLXN_10880), 
                   .I1(PB4_RESET), 
                   .O(XLXN_10789));
   clkdiv2_MUSER_main  XLXI_45 (.CLK(XLXN_10793), 
                               .CLKO(XLXN_10797));
   ClockDiv10_MUSER_main  XLXI_46 (.CLK(XLXN_42), 
                                  .CLKO(XLXN_10793));
   ClockDiv1K  XLXI_47 (.CLK(XLXN_117), 
                       .CLK_O(XLXN_42));
   ClockDiv1K  XLXI_48 (.CLK(XLXN_10879), 
                       .CLK_O(XLXN_117));
   Counter00_59  XLXI_50 (.Clock(XLXN_10797), 
                         .Enable(XLXN_10880), 
                         .Reset(XLXN_10789), 
                         .CEO(XLXN_95), 
                         .Ones(XLXN_98[3:0]), 
                         .TC(), 
                         .Tens(XLXN_99[3:0]));
   (* HU_SET = "XLXI_56_7" *) 
   FJKC_HXILINX_main  XLXI_56 (.C(XLXN_10848), 
                              .CLR(XLXN_10789), 
                              .J(XLXN_10880), 
                              .K(XLXN_10880), 
                              .Q(XLXN_10846));
   INV  XLXI_59 (.I(XLXN_10846), 
                .O(XLXN_10791));
   INV  XLXI_60 (.I(XLXN_10793), 
                .O(XLXN_10848));
   AND2  XLXI_65 (.I0(XLXN_10880), 
                 .I1(OSC), 
                 .O(XLXN_10879));
   ClockDiv1K  XLXI_66 (.CLK(OSC), 
                       .CLK_O(XLXN_10881));
endmodule
