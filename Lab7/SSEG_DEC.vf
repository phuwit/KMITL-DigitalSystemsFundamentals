////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : SSEG_DEC.vf
// /___/   /\     Timestamp : 09/10/2024 17:11:17
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog /home/phuwit/Programming/KMITL-DigitalSystemsFundamentals/Lab7/SSEG_DEC.vf -w /home/phuwit/Programming/KMITL-DigitalSystemsFundamentals/Modules/SSEG_DEC.sch
//Design Name: SSEG_DEC
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module OR6_HXILINX_SSEG_DEC (O, I0, I1, I2, I3, I4, I5);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;

assign O = (I0 || I1 || I2 || I3 || I4 || I5);

endmodule
`timescale 1ns / 1ps

module SSEG_G_MUSER_SSEG_DEC(BCD, 
                             SSEG_G);

    input [3:0] BCD;
   output SSEG_G;
   
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   
   AND2  XLXI_2 (.I0(BCD[0]), 
                .I1(BCD[3]), 
                .O(XLXN_42));
   AND2B1  XLXI_3 (.I0(BCD[2]), 
                  .I1(BCD[3]), 
                  .O(XLXN_43));
   AND3  XLXI_7 (.I0(XLXN_45), 
                .I1(BCD[2]), 
                .I2(XLXN_46), 
                .O(XLXN_44));
   OR5  XLXI_8 (.I0(XLXN_48), 
               .I1(XLXN_47), 
               .I2(XLXN_44), 
               .I3(XLXN_43), 
               .I4(XLXN_42), 
               .O(SSEG_G));
   INV  XLXI_9 (.I(BCD[3]), 
               .O(XLXN_45));
   INV  XLXI_10 (.I(BCD[1]), 
                .O(XLXN_46));
   AND2B1  XLXI_11 (.I0(BCD[2]), 
                   .I1(BCD[1]), 
                   .O(XLXN_48));
   AND2B1  XLXI_12 (.I0(BCD[0]), 
                   .I1(BCD[1]), 
                   .O(XLXN_47));
endmodule
`timescale 1ns / 1ps

module SSEG_F_MUSER_SSEG_DEC(BCD, 
                             SSEG_F);

    input [3:0] BCD;
   output SSEG_F;
   
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   
   OR5  XLXI_1 (.I0(XLXN_13), 
               .I1(XLXN_14), 
               .I2(XLXN_16), 
               .I3(XLXN_15), 
               .I4(XLXN_12), 
               .O(SSEG_F));
   AND2B1  XLXI_2 (.I0(BCD[0]), 
                  .I1(BCD[2]), 
                  .O(XLXN_16));
   AND2B1  XLXI_3 (.I0(BCD[2]), 
                  .I1(BCD[3]), 
                  .O(XLXN_14));
   AND2  XLXI_4 (.I0(BCD[1]), 
                .I1(BCD[3]), 
                .O(XLXN_13));
   AND3B2  XLXI_5 (.I0(BCD[1]), 
                  .I1(BCD[3]), 
                  .I2(BCD[2]), 
                  .O(XLXN_15));
   AND2B2  XLXI_6 (.I0(BCD[0]), 
                  .I1(BCD[1]), 
                  .O(XLXN_12));
endmodule
`timescale 1ns / 1ps

module SSEG_E_MUSER_SSEG_DEC(BCD, 
                             SSEG_E);

    input [3:0] BCD;
   output SSEG_E;
   
   wire XLXN_15;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   
   OR4  XLXI_1 (.I0(XLXN_18), 
               .I1(XLXN_17), 
               .I2(XLXN_19), 
               .I3(XLXN_15), 
               .O(SSEG_E));
   AND2B2  XLXI_2 (.I0(BCD[0]), 
                  .I1(BCD[2]), 
                  .O(XLXN_15));
   AND2B1  XLXI_3 (.I0(BCD[0]), 
                  .I1(BCD[1]), 
                  .O(XLXN_19));
   AND2  XLXI_4 (.I0(BCD[1]), 
                .I1(BCD[3]), 
                .O(XLXN_17));
   AND2  XLXI_5 (.I0(BCD[2]), 
                .I1(BCD[3]), 
                .O(XLXN_18));
endmodule
`timescale 1ns / 1ps

module SSEG_D_MUSER_SSEG_DEC(BCD, 
                             SSEG_D);

    input [3:0] BCD;
   output SSEG_D;
   
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   
   OR5  XLXI_1 (.I0(XLXN_12), 
               .I1(XLXN_10), 
               .I2(XLXN_9), 
               .I3(XLXN_13), 
               .I4(XLXN_14), 
               .O(SSEG_D));
   AND3B3  XLXI_3 (.I0(BCD[0]), 
                  .I1(BCD[2]), 
                  .I2(BCD[3]), 
                  .O(XLXN_14));
   AND3B1  XLXI_6 (.I0(BCD[2]), 
                  .I1(BCD[1]), 
                  .I2(BCD[0]), 
                  .O(XLXN_13));
   AND3B1  XLXI_7 (.I0(BCD[1]), 
                  .I1(BCD[2]), 
                  .I2(BCD[0]), 
                  .O(XLXN_9));
   AND3B1  XLXI_8 (.I0(BCD[0]), 
                  .I1(BCD[1]), 
                  .I2(BCD[2]), 
                  .O(XLXN_10));
   AND2B1  XLXI_9 (.I0(BCD[1]), 
                  .I1(BCD[3]), 
                  .O(XLXN_12));
endmodule
`timescale 1ns / 1ps

module SSEG_C_MUSER_SSEG_DEC(BCD, 
                             SSEG_C);

    input [3:0] BCD;
   output SSEG_C;
   
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   
   OR5  XLXI_1 (.I0(XLXN_18), 
               .I1(XLXN_17), 
               .I2(XLXN_16), 
               .I3(XLXN_15), 
               .I4(XLXN_14), 
               .O(SSEG_C));
   AND2B2  XLXI_4 (.I0(BCD[1]), 
                  .I1(BCD[3]), 
                  .O(XLXN_14));
   AND2B1  XLXI_5 (.I0(BCD[1]), 
                  .I1(BCD[0]), 
                  .O(XLXN_16));
   AND2B1  XLXI_6 (.I0(BCD[3]), 
                  .I1(BCD[0]), 
                  .O(XLXN_15));
   AND2B1  XLXI_7 (.I0(BCD[3]), 
                  .I1(BCD[2]), 
                  .O(XLXN_17));
   AND2B1  XLXI_8 (.I0(BCD[2]), 
                  .I1(BCD[3]), 
                  .O(XLXN_18));
endmodule
`timescale 1ns / 1ps

module SSEG_B_MUSER_SSEG_DEC(BCD, 
                             SSEG_B);

    input [3:0] BCD;
   output SSEG_B;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   
   OR5  XLXI_1 (.I0(XLXN_5), 
               .I1(XLXN_4), 
               .I2(XLXN_1), 
               .I3(XLXN_2), 
               .I4(XLXN_3), 
               .O(SSEG_B));
   AND2B2  XLXI_2 (.I0(BCD[2]), 
                  .I1(BCD[3]), 
                  .O(XLXN_3));
   AND3B3  XLXI_3 (.I0(BCD[0]), 
                  .I1(BCD[1]), 
                  .I2(BCD[3]), 
                  .O(XLXN_2));
   AND2B2  XLXI_4 (.I0(BCD[0]), 
                  .I1(BCD[2]), 
                  .O(XLXN_1));
   AND3B1  XLXI_12 (.I0(BCD[3]), 
                   .I1(BCD[0]), 
                   .I2(BCD[1]), 
                   .O(XLXN_4));
   AND3B1  XLXI_13 (.I0(BCD[1]), 
                   .I1(BCD[0]), 
                   .I2(BCD[3]), 
                   .O(XLXN_5));
endmodule
`timescale 1ns / 1ps

module SSEG_A_MUSER_SSEG_DEC(BCD, 
                             SSEG_A);

    input [3:0] BCD;
   output SSEG_A;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   
   AND2B2  XLXI_1 (.I0(BCD[0]), 
                  .I1(BCD[2]), 
                  .O(XLXN_6));
   AND2  XLXI_2 (.I0(BCD[1]), 
                .I1(BCD[2]), 
                .O(XLXN_4));
   (* HU_SET = "XLXI_3_42" *) 
   OR6_HXILINX_SSEG_DEC  XLXI_3 (.I0(XLXN_8), 
                                .I1(XLXN_7), 
                                .I2(XLXN_4), 
                                .I3(XLXN_3), 
                                .I4(XLXN_2), 
                                .I5(XLXN_6), 
                                .O(SSEG_A));
   AND3B2  XLXI_4 (.I0(BCD[1]), 
                  .I1(BCD[2]), 
                  .I2(BCD[3]), 
                  .O(XLXN_7));
   AND2B1  XLXI_5 (.I0(BCD[3]), 
                  .I1(BCD[1]), 
                  .O(XLXN_2));
   AND3B1  XLXI_6 (.I0(BCD[3]), 
                  .I1(BCD[2]), 
                  .I2(BCD[0]), 
                  .O(XLXN_3));
   AND2B1  XLXI_8 (.I0(BCD[0]), 
                  .I1(BCD[3]), 
                  .O(XLXN_8));
endmodule
`timescale 1ns / 1ps

module SSEG_DEC(BCD, 
                SSEG);

    input [3:0] BCD;
   output [6:0] SSEG;
   
   
   SSEG_A_MUSER_SSEG_DEC  XLXI_9 (.BCD(BCD[3:0]), 
                                 .SSEG_A(SSEG[6]));
   SSEG_B_MUSER_SSEG_DEC  XLXI_10 (.BCD(BCD[3:0]), 
                                  .SSEG_B(SSEG[5]));
   SSEG_C_MUSER_SSEG_DEC  XLXI_11 (.BCD(BCD[3:0]), 
                                  .SSEG_C(SSEG[4]));
   SSEG_D_MUSER_SSEG_DEC  XLXI_12 (.BCD(BCD[3:0]), 
                                  .SSEG_D(SSEG[3]));
   SSEG_E_MUSER_SSEG_DEC  XLXI_13 (.BCD(BCD[3:0]), 
                                  .SSEG_E(SSEG[2]));
   SSEG_F_MUSER_SSEG_DEC  XLXI_14 (.BCD(BCD[3:0]), 
                                  .SSEG_F(SSEG[1]));
   SSEG_G_MUSER_SSEG_DEC  XLXI_15 (.BCD(BCD[3:0]), 
                                  .SSEG_G(SSEG[0]));
endmodule
