////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Counter00_99.vf
// /___/   /\     Timestamp : 09/10/2024 17:11:17
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog /home/phuwit/Programming/KMITL-DigitalSystemsFundamentals/Lab7/Counter00_99.vf -w /home/phuwit/Programming/KMITL-DigitalSystemsFundamentals/Modules/Counter00_99.sch
//Design Name: Counter00_99
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKCE_HXILINX_Counter00_99(Q, C, CE, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(CE)
        begin
          if(!J)
          begin
            if(K)
            Q <= 1'b0;
          end
          else
          begin
            if(!K)
            Q <= 1'b1;
            else 
            Q <= !Q;
          end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module Counter0_9_MUSER_Counter00_99(CE, 
                                     CLK, 
                                     CLR, 
                                     CEO, 
                                     Q0, 
                                     Q1, 
                                     Q2, 
                                     Q3, 
                                     TC);

    input CE;
    input CLK;
    input CLR;
   output CEO;
   output Q0;
   output Q1;
   output Q2;
   output Q3;
   output TC;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire Q2_DUMMY;
   wire Q3_DUMMY;
   wire TC_DUMMY;
   
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign Q2 = Q2_DUMMY;
   assign Q3 = Q3_DUMMY;
   assign TC = TC_DUMMY;
   (* HU_SET = "FlipFlop_A_19" *) 
   FJKCE_HXILINX_Counter00_99  FlipFlop_A (.C(CLK), 
                                          .CE(CE), 
                                          .CLR(CLR), 
                                          .J(XLXN_2), 
                                          .K(XLXN_1), 
                                          .Q(Q0_DUMMY));
   (* HU_SET = "FlipFlop_B_20" *) 
   FJKCE_HXILINX_Counter00_99  FlipFlop_B (.C(CLK), 
                                          .CE(CE), 
                                          .CLR(CLR), 
                                          .J(XLXN_3), 
                                          .K(Q0_DUMMY), 
                                          .Q(Q1_DUMMY));
   (* HU_SET = "FlipFlop_C_21" *) 
   FJKCE_HXILINX_Counter00_99  FlipFlop_C (.C(CLK), 
                                          .CE(CE), 
                                          .CLR(CLR), 
                                          .J(XLXN_6), 
                                          .K(XLXN_5), 
                                          .Q(Q2_DUMMY));
   (* HU_SET = "FlipFlop_D_22" *) 
   FJKCE_HXILINX_Counter00_99  FlipFlop_D (.C(CLK), 
                                          .CE(CE), 
                                          .CLR(CLR), 
                                          .J(XLXN_7), 
                                          .K(Q0_DUMMY), 
                                          .Q(Q3_DUMMY));
   VCC  XLXI_1 (.P(XLXN_1));
   VCC  XLXI_2 (.P(XLXN_2));
   AND2  XLXI_3 (.I0(Q0_DUMMY), 
                .I1(XLXN_4), 
                .O(XLXN_3));
   INV  XLXI_4 (.I(Q3_DUMMY), 
               .O(XLXN_4));
   AND2  XLXI_5 (.I0(Q0_DUMMY), 
                .I1(Q1_DUMMY), 
                .O(XLXN_5));
   AND2  XLXI_6 (.I0(Q0_DUMMY), 
                .I1(Q1_DUMMY), 
                .O(XLXN_6));
   AND3  XLXI_7 (.I0(Q0_DUMMY), 
                .I1(Q1_DUMMY), 
                .I2(Q2_DUMMY), 
                .O(XLXN_7));
   AND4  XLXI_8 (.I0(Q0_DUMMY), 
                .I1(XLXN_8), 
                .I2(XLXN_9), 
                .I3(Q3_DUMMY), 
                .O(TC_DUMMY));
   INV  XLXI_9 (.I(Q1_DUMMY), 
               .O(XLXN_8));
   INV  XLXI_10 (.I(Q2_DUMMY), 
                .O(XLXN_9));
   AND2  XLXI_11 (.I0(TC_DUMMY), 
                 .I1(CE), 
                 .O(CEO));
endmodule
`timescale 1ns / 1ps

module Counter00_99(Clock, 
                    Enable, 
                    Reset, 
                    CEO, 
                    Ones, 
                    TC, 
                    Tens);

    input Clock;
    input Enable;
    input Reset;
   output CEO;
   output [3:0] Ones;
   output TC;
   output [3:0] Tens;
   
   wire XLXN_26;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_95;
   wire XLXN_96;
   wire XLXN_97;
   wire XLXN_140;
   
   Counter0_9_MUSER_Counter00_99  XLXI_10 (.CE(Enable), 
                                          .CLK(Clock), 
                                          .CLR(Reset), 
                                          .CEO(XLXN_26), 
                                          .Q0(XLXN_67), 
                                          .Q1(XLXN_68), 
                                          .Q2(XLXN_69), 
                                          .Q3(XLXN_70), 
                                          .TC());
   wtb4  XLXI_17 (.I0(XLXN_67), 
                 .I1(XLXN_68), 
                 .I2(XLXN_69), 
                 .I3(XLXN_70), 
                 .O(Ones[3:0]));
   wtb4  XLXI_18 (.I0(XLXN_140), 
                 .I1(XLXN_95), 
                 .I2(XLXN_96), 
                 .I3(XLXN_97), 
                 .O(Tens[3:0]));
   Counter0_9_MUSER_Counter00_99  XLXI_34 (.CE(XLXN_26), 
                                          .CLK(Clock), 
                                          .CLR(Reset), 
                                          .CEO(CEO), 
                                          .Q0(XLXN_140), 
                                          .Q1(XLXN_95), 
                                          .Q2(XLXN_96), 
                                          .Q3(XLXN_97), 
                                          .TC(TC));
endmodule
