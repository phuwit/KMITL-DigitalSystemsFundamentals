////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Counter0_9_drc.vf
// /___/   /\     Timestamp : 08/23/2024 00:08:15
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: /opt/Xilinx/14.7/ISE_DS/ISE/bin/lin64/unwrapped/sch2hdl -intstyle ise -family spartan6 -verilog Counter0_9_drc.vf -w /home/phuwit/Programming/KMITL-DigitalSystemsFundamentals/Lab6/Counter0_9.sch
//Design Name: Counter0_9
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKC_HXILINX_Counter0_9(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module Counter0_9(Clock, 
                  Enable, 
                  Count, 
                  TC);

    input Clock;
    input Enable;
   output [3:0] Count;
   output TC;
   
   wire XLXN_1;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_10;
   wire XLXN_14;
   wire XLXN_23;
   wire [3:0] Count_DUMMY;
   
   assign Count[3:0] = Count_DUMMY[3:0];
   (* HU_SET = "XLXI_1_0" *) 
   FJKC_HXILINX_Counter0_9  XLXI_1 (.C(Clock), 
                                   .CLR(XLXN_5), 
                                   .J(Enable), 
                                   .K(Enable), 
                                   .Q(Count_DUMMY[0]));
   (* HU_SET = "XLXI_2_1" *) 
   FJKC_HXILINX_Counter0_9  XLXI_2 (.C(Clock), 
                                   .CLR(XLXN_4), 
                                   .J(XLXN_10), 
                                   .K(Count_DUMMY[0]), 
                                   .Q(Count_DUMMY[1]));
   (* HU_SET = "XLXI_3_2" *) 
   FJKC_HXILINX_Counter0_9  XLXI_3 (.C(Clock), 
                                   .CLR(XLXN_3), 
                                   .J(XLXN_14), 
                                   .K(XLXN_14), 
                                   .Q(Count_DUMMY[2]));
   (* HU_SET = "XLXI_4_3" *) 
   FJKC_HXILINX_Counter0_9  XLXI_4 (.C(Clock), 
                                   .CLR(XLXN_1), 
                                   .J(XLXN_23), 
                                   .K(Count_DUMMY[0]), 
                                   .Q(Count_DUMMY[3]));
   GND  XLXI_17 (.G(XLXN_1));
   GND  XLXI_19 (.G(XLXN_3));
   GND  XLXI_20 (.G(XLXN_4));
   GND  XLXI_21 (.G(XLXN_5));
   AND2B1  XLXI_23 (.I0(Count_DUMMY[3]), 
                   .I1(Count_DUMMY[0]), 
                   .O(XLXN_10));
   AND2  XLXI_24 (.I0(Count_DUMMY[1]), 
                 .I1(Count_DUMMY[0]), 
                 .O(XLXN_14));
   AND3  XLXI_25 (.I0(Count_DUMMY[2]), 
                 .I1(Count_DUMMY[1]), 
                 .I2(Count_DUMMY[0]), 
                 .O(XLXN_23));
   AND4B2  XLXI_26 (.I0(Count_DUMMY[1]), 
                   .I1(Count_DUMMY[2]), 
                   .I2(Count_DUMMY[0]), 
                   .I3(Count_DUMMY[3]), 
                   .O(TC));
endmodule
