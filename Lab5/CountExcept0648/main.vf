////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : main.vf
// /___/   /\     Timestamp : 07/30/2024 21:53:07
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog /home/phuwit/Programming/KMITL-DigitalSystemsFundamentals/Lab5/CountExcept0648/main.vf -w /home/phuwit/Programming/KMITL-DigitalSystemsFundamentals/Lab5/CountExcept0648/main.sch
//Design Name: main
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module OR6_HXILINX_main (O, I0, I1, I2, I3, I4, I5);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;

assign O = (I0 || I1 || I2 || I3 || I4 || I5);

endmodule
`timescale 100 ps / 10 ps

module FJKC_HXILINX_main(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module CountExcept0648_MUSER_main(CLK_IN, 
                                  BCD);

    input CLK_IN;
   output [3:0] BCD;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_47;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_51;
   wire [3:0] BCD_DUMMY;
   
   assign BCD[3:0] = BCD_DUMMY[3:0];
   (* HU_SET = "XLXI_1_15" *) 
   FJKC_HXILINX_main  XLXI_1 (.C(CLK_IN), 
                             .CLR(XLXN_2), 
                             .J(XLXN_51), 
                             .K(XLXN_50), 
                             .Q(BCD_DUMMY[3]));
   (* HU_SET = "XLXI_2_16" *) 
   FJKC_HXILINX_main  XLXI_2 (.C(CLK_IN), 
                             .CLR(XLXN_5), 
                             .J(XLXN_49), 
                             .K(XLXN_49), 
                             .Q(BCD_DUMMY[2]));
   (* HU_SET = "XLXI_4_17" *) 
   FJKC_HXILINX_main  XLXI_4 (.C(CLK_IN), 
                             .CLR(XLXN_3), 
                             .J(XLXN_43), 
                             .K(BCD_DUMMY[0]), 
                             .Q(BCD_DUMMY[1]));
   (* HU_SET = "XLXI_5_18" *) 
   FJKC_HXILINX_main  XLXI_5 (.C(CLK_IN), 
                             .CLR(XLXN_4), 
                             .J(XLXN_8), 
                             .K(XLXN_9), 
                             .Q(BCD_DUMMY[0]));
   VCC  XLXI_22 (.P(XLXN_8));
   GND  XLXI_23 (.G(XLXN_2));
   GND  XLXI_25 (.G(XLXN_3));
   GND  XLXI_26 (.G(XLXN_4));
   GND  XLXI_27 (.G(XLXN_5));
   AND3B3  XLXI_28 (.I0(BCD_DUMMY[1]), 
                   .I1(BCD_DUMMY[2]), 
                   .I2(BCD_DUMMY[3]), 
                   .O(XLXN_9));
   OR2  XLXI_50 (.I0(XLXN_47), 
                .I1(XLXN_44), 
                .O(XLXN_43));
   AND2  XLXI_51 (.I0(BCD_DUMMY[2]), 
                 .I1(BCD_DUMMY[0]), 
                 .O(XLXN_44));
   AND2B1  XLXI_52 (.I0(BCD_DUMMY[3]), 
                   .I1(BCD_DUMMY[0]), 
                   .O(XLXN_47));
   AND2  XLXI_53 (.I0(BCD_DUMMY[1]), 
                 .I1(BCD_DUMMY[0]), 
                 .O(XLXN_49));
   VCC  XLXI_54 (.P(XLXN_50));
   AND3  XLXI_55 (.I0(BCD_DUMMY[2]), 
                 .I1(BCD_DUMMY[1]), 
                 .I2(BCD_DUMMY[0]), 
                 .O(XLXN_51));
endmodule
`timescale 1ns / 1ps

module Mod10Pulse_MUSER_main(CLK_IN, 
                             J, 
                             K, 
                             CLK_OUT);

    input CLK_IN;
    input J;
    input K;
   output CLK_OUT;
   
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_18;
   wire XLXN_20;
   wire XLXN_23;
   wire XLXN_26;
   wire CLK_OUT_DUMMY;
   
   assign CLK_OUT = CLK_OUT_DUMMY;
   (* HU_SET = "XLXI_1_19" *) 
   FJKC_HXILINX_main  XLXI_1 (.C(CLK_IN), 
                             .CLR(CLK_OUT_DUMMY), 
                             .J(XLXN_13), 
                             .K(XLXN_13), 
                             .Q(XLXN_26));
   (* HU_SET = "XLXI_2_20" *) 
   FJKC_HXILINX_main  XLXI_2 (.C(CLK_IN), 
                             .CLR(CLK_OUT_DUMMY), 
                             .J(J), 
                             .K(K), 
                             .Q(XLXN_18));
   (* HU_SET = "XLXI_4_22" *) 
   FJKC_HXILINX_main  XLXI_4 (.C(CLK_IN), 
                             .CLR(CLK_OUT_DUMMY), 
                             .J(XLXN_18), 
                             .K(XLXN_18), 
                             .Q(XLXN_23));
   (* HU_SET = "XLXI_6_21" *) 
   FJKC_HXILINX_main  XLXI_6 (.C(CLK_IN), 
                             .CLR(CLK_OUT_DUMMY), 
                             .J(XLXN_20), 
                             .K(XLXN_20), 
                             .Q(XLXN_14));
   AND2  XLXI_7 (.I0(XLXN_23), 
                .I1(XLXN_14), 
                .O(CLK_OUT_DUMMY));
   AND2  XLXI_8 (.I0(XLXN_18), 
                .I1(XLXN_23), 
                .O(XLXN_13));
   AND3  XLXI_9 (.I0(XLXN_18), 
                .I1(XLXN_23), 
                .I2(XLXN_26), 
                .O(XLXN_20));
endmodule
`timescale 1ns / 1ps

module OneHz_MUSER_main(CLK_IN, 
                        CLK_OUT);

    input CLK_IN;
   output CLK_OUT;
   
   wire XLXN_107;
   wire XLXN_108;
   wire XLXN_109;
   wire XLXN_110;
   wire XLXN_111;
   wire XLXN_131;
   wire XLXN_153;
   wire XLXN_154;
   wire XLXN_156;
   
   Mod10Pulse_MUSER_main  XLXI_1 (.CLK_IN(CLK_IN), 
                                 .J(XLXN_154), 
                                 .K(XLXN_154), 
                                 .CLK_OUT(XLXN_107));
   Mod10Pulse_MUSER_main  XLXI_2 (.CLK_IN(XLXN_107), 
                                 .J(XLXN_154), 
                                 .K(XLXN_154), 
                                 .CLK_OUT(XLXN_108));
   Mod10Pulse_MUSER_main  XLXI_3 (.CLK_IN(XLXN_108), 
                                 .J(XLXN_154), 
                                 .K(XLXN_154), 
                                 .CLK_OUT(XLXN_109));
   Mod10Pulse_MUSER_main  XLXI_4 (.CLK_IN(XLXN_109), 
                                 .J(XLXN_154), 
                                 .K(XLXN_154), 
                                 .CLK_OUT(XLXN_110));
   Mod10Pulse_MUSER_main  XLXI_5 (.CLK_IN(XLXN_110), 
                                 .J(XLXN_154), 
                                 .K(XLXN_154), 
                                 .CLK_OUT(XLXN_111));
   Mod10Pulse_MUSER_main  XLXI_6 (.CLK_IN(XLXN_111), 
                                 .J(XLXN_154), 
                                 .K(XLXN_154), 
                                 .CLK_OUT(XLXN_131));
   VCC  XLXI_7 (.P(XLXN_154));
   Mod10Pulse_MUSER_main  XLXI_18 (.CLK_IN(XLXN_131), 
                                  .J(XLXN_154), 
                                  .K(XLXN_154), 
                                  .CLK_OUT(XLXN_153));
   (* HU_SET = "XLXI_19_23" *) 
   FJKC_HXILINX_main  XLXI_19 (.C(XLXN_153), 
                              .CLR(XLXN_156), 
                              .J(XLXN_154), 
                              .K(XLXN_154), 
                              .Q(CLK_OUT));
   GND  XLXI_20 (.G(XLXN_156));
endmodule
`timescale 1ns / 1ps

module SSEG_G_MUSER_main(BCD, 
                         SSEG_G);

    input [3:0] BCD;
   output SSEG_G;
   
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   
   AND2  XLXI_2 (.I0(BCD[0]), 
                .I1(BCD[3]), 
                .O(XLXN_42));
   AND2B1  XLXI_3 (.I0(BCD[2]), 
                  .I1(BCD[3]), 
                  .O(XLXN_43));
   AND3  XLXI_7 (.I0(XLXN_45), 
                .I1(BCD[2]), 
                .I2(XLXN_46), 
                .O(XLXN_44));
   OR5  XLXI_8 (.I0(XLXN_48), 
               .I1(XLXN_47), 
               .I2(XLXN_44), 
               .I3(XLXN_43), 
               .I4(XLXN_42), 
               .O(SSEG_G));
   INV  XLXI_9 (.I(BCD[3]), 
               .O(XLXN_45));
   INV  XLXI_10 (.I(BCD[1]), 
                .O(XLXN_46));
   AND2B1  XLXI_11 (.I0(BCD[2]), 
                   .I1(BCD[1]), 
                   .O(XLXN_48));
   AND2B1  XLXI_12 (.I0(BCD[0]), 
                   .I1(BCD[1]), 
                   .O(XLXN_47));
endmodule
`timescale 1ns / 1ps

module SSEG_F_MUSER_main(BCD, 
                         SSEG_F);

    input [3:0] BCD;
   output SSEG_F;
   
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   
   OR5  XLXI_1 (.I0(XLXN_13), 
               .I1(XLXN_14), 
               .I2(XLXN_16), 
               .I3(XLXN_15), 
               .I4(XLXN_12), 
               .O(SSEG_F));
   AND2B1  XLXI_2 (.I0(BCD[0]), 
                  .I1(BCD[2]), 
                  .O(XLXN_16));
   AND2B1  XLXI_3 (.I0(BCD[2]), 
                  .I1(BCD[3]), 
                  .O(XLXN_14));
   AND2  XLXI_4 (.I0(BCD[1]), 
                .I1(BCD[3]), 
                .O(XLXN_13));
   AND3B2  XLXI_5 (.I0(BCD[1]), 
                  .I1(BCD[3]), 
                  .I2(BCD[2]), 
                  .O(XLXN_15));
   AND2B2  XLXI_6 (.I0(BCD[0]), 
                  .I1(BCD[1]), 
                  .O(XLXN_12));
endmodule
`timescale 1ns / 1ps

module SSEG_E_MUSER_main(BCD, 
                         SSEG_E);

    input [3:0] BCD;
   output SSEG_E;
   
   wire XLXN_15;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   
   OR4  XLXI_1 (.I0(XLXN_18), 
               .I1(XLXN_17), 
               .I2(XLXN_19), 
               .I3(XLXN_15), 
               .O(SSEG_E));
   AND2B2  XLXI_2 (.I0(BCD[0]), 
                  .I1(BCD[2]), 
                  .O(XLXN_15));
   AND2B1  XLXI_3 (.I0(BCD[0]), 
                  .I1(BCD[1]), 
                  .O(XLXN_19));
   AND2  XLXI_4 (.I0(BCD[1]), 
                .I1(BCD[3]), 
                .O(XLXN_17));
   AND2  XLXI_5 (.I0(BCD[2]), 
                .I1(BCD[3]), 
                .O(XLXN_18));
endmodule
`timescale 1ns / 1ps

module SSEG_D_MUSER_main(BCD, 
                         SSEG_D);

    input [3:0] BCD;
   output SSEG_D;
   
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   
   OR5  XLXI_1 (.I0(XLXN_12), 
               .I1(XLXN_10), 
               .I2(XLXN_9), 
               .I3(XLXN_13), 
               .I4(XLXN_14), 
               .O(SSEG_D));
   AND3B3  XLXI_3 (.I0(BCD[0]), 
                  .I1(BCD[2]), 
                  .I2(BCD[3]), 
                  .O(XLXN_14));
   AND3B1  XLXI_6 (.I0(BCD[2]), 
                  .I1(BCD[1]), 
                  .I2(BCD[0]), 
                  .O(XLXN_13));
   AND3B1  XLXI_7 (.I0(BCD[1]), 
                  .I1(BCD[2]), 
                  .I2(BCD[0]), 
                  .O(XLXN_9));
   AND3B1  XLXI_8 (.I0(BCD[0]), 
                  .I1(BCD[1]), 
                  .I2(BCD[2]), 
                  .O(XLXN_10));
   AND2B1  XLXI_9 (.I0(BCD[1]), 
                  .I1(BCD[3]), 
                  .O(XLXN_12));
endmodule
`timescale 1ns / 1ps

module SSEG_C_MUSER_main(BCD, 
                         SSEG_C);

    input [3:0] BCD;
   output SSEG_C;
   
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   
   OR5  XLXI_1 (.I0(XLXN_18), 
               .I1(XLXN_17), 
               .I2(XLXN_16), 
               .I3(XLXN_15), 
               .I4(XLXN_14), 
               .O(SSEG_C));
   AND2B2  XLXI_4 (.I0(BCD[1]), 
                  .I1(BCD[3]), 
                  .O(XLXN_14));
   AND2B1  XLXI_5 (.I0(BCD[1]), 
                  .I1(BCD[0]), 
                  .O(XLXN_16));
   AND2B1  XLXI_6 (.I0(BCD[3]), 
                  .I1(BCD[0]), 
                  .O(XLXN_15));
   AND2B1  XLXI_7 (.I0(BCD[3]), 
                  .I1(BCD[2]), 
                  .O(XLXN_17));
   AND2B1  XLXI_8 (.I0(BCD[2]), 
                  .I1(BCD[3]), 
                  .O(XLXN_18));
endmodule
`timescale 1ns / 1ps

module SSEG_B_MUSER_main(BCD, 
                         SSEG_B);

    input [3:0] BCD;
   output SSEG_B;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   
   OR5  XLXI_1 (.I0(XLXN_5), 
               .I1(XLXN_4), 
               .I2(XLXN_1), 
               .I3(XLXN_2), 
               .I4(XLXN_3), 
               .O(SSEG_B));
   AND2B2  XLXI_2 (.I0(BCD[2]), 
                  .I1(BCD[3]), 
                  .O(XLXN_3));
   AND3B3  XLXI_3 (.I0(BCD[0]), 
                  .I1(BCD[1]), 
                  .I2(BCD[3]), 
                  .O(XLXN_2));
   AND2B2  XLXI_4 (.I0(BCD[0]), 
                  .I1(BCD[2]), 
                  .O(XLXN_1));
   AND3B1  XLXI_12 (.I0(BCD[3]), 
                   .I1(BCD[0]), 
                   .I2(BCD[1]), 
                   .O(XLXN_4));
   AND3B1  XLXI_13 (.I0(BCD[1]), 
                   .I1(BCD[0]), 
                   .I2(BCD[3]), 
                   .O(XLXN_5));
endmodule
`timescale 1ns / 1ps

module SSEG_A_MUSER_main(BCD, 
                         SSEG_A);

    input [3:0] BCD;
   output SSEG_A;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   
   AND2B2  XLXI_1 (.I0(BCD[0]), 
                  .I1(BCD[2]), 
                  .O(XLXN_6));
   AND2  XLXI_2 (.I0(BCD[1]), 
                .I1(BCD[2]), 
                .O(XLXN_4));
   (* HU_SET = "XLXI_3_24" *) 
   OR6_HXILINX_main  XLXI_3 (.I0(XLXN_8), 
                            .I1(XLXN_7), 
                            .I2(XLXN_4), 
                            .I3(XLXN_3), 
                            .I4(XLXN_2), 
                            .I5(XLXN_6), 
                            .O(SSEG_A));
   AND3B2  XLXI_4 (.I0(BCD[1]), 
                  .I1(BCD[2]), 
                  .I2(BCD[3]), 
                  .O(XLXN_7));
   AND2B1  XLXI_5 (.I0(BCD[3]), 
                  .I1(BCD[1]), 
                  .O(XLXN_2));
   AND3B1  XLXI_6 (.I0(BCD[3]), 
                  .I1(BCD[2]), 
                  .I2(BCD[0]), 
                  .O(XLXN_3));
   AND2B1  XLXI_8 (.I0(BCD[0]), 
                  .I1(BCD[3]), 
                  .O(XLXN_8));
endmodule
`timescale 1ns / 1ps

module SSEG_DEC_MUSER_main(BCD, 
                           SSEG);

    input [3:0] BCD;
   output [6:0] SSEG;
   
   
   SSEG_A_MUSER_main  XLXI_9 (.BCD(BCD[3:0]), 
                             .SSEG_A(SSEG[6]));
   SSEG_B_MUSER_main  XLXI_10 (.BCD(BCD[3:0]), 
                              .SSEG_B(SSEG[5]));
   SSEG_C_MUSER_main  XLXI_11 (.BCD(BCD[3:0]), 
                              .SSEG_C(SSEG[4]));
   SSEG_D_MUSER_main  XLXI_12 (.BCD(BCD[3:0]), 
                              .SSEG_D(SSEG[3]));
   SSEG_E_MUSER_main  XLXI_13 (.BCD(BCD[3:0]), 
                              .SSEG_E(SSEG[2]));
   SSEG_F_MUSER_main  XLXI_14 (.BCD(BCD[3:0]), 
                              .SSEG_F(SSEG[1]));
   SSEG_G_MUSER_main  XLXI_15 (.BCD(BCD[3:0]), 
                              .SSEG_G(SSEG[0]));
endmodule
`timescale 1ns / 1ps

module main(OSC_P123, 
            SSEG_COM0_P44, 
            SSEG_OUT);

    input OSC_P123;
   output SSEG_COM0_P44;
   output [6:0] SSEG_OUT;
   
   wire [3:0] BCD;
   wire XLXN_32;
   
   SSEG_DEC_MUSER_main  XLXI_14 (.BCD(BCD[3:0]), 
                                .SSEG(SSEG_OUT[6:0]));
   GND  XLXI_15 (.G(SSEG_COM0_P44));
   OneHz_MUSER_main  XLXI_23 (.CLK_IN(OSC_P123), 
                             .CLK_OUT(XLXN_32));
   CountExcept0648_MUSER_main  XLXI_32 (.CLK_IN(XLXN_32), 
                                       .BCD(BCD[3:0]));
endmodule
